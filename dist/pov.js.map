{"version":3,"sources":["../src/pov.js"],"names":["getter","o","field","setter","v","array","_get","_set","mapper","unmapped","get","map","set","mapped","newMapped","inject","pov","source","mapping","options","clone","from","Object","keys","forEach","key","result","eject","reduce","ejectable","assign","addGetterSetter","name","select","defineProperty","configurable","enumerable","value","writable"],"mappings":"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","sourcesContent":["const getter = (o, field) => o[field];\n\nconst setter = (o, field, v) => {\n  o[field] = v;\n};\n\nconst array = (_get = getter, _set = setter) => (\n  field,\n  mapper = unmapped => unmapped\n) => {\n  return {\n    get: o => (_get(o, field) || []).map(unmapped => mapper(unmapped)),\n    set: (o, v) => {\n      _set(\n        o,\n        field,\n        v.map(mapped => {\n          const unmapped = {};\n          const newMapped = mapper(unmapped);\n          newMapped.inject(mapped);\n          return unmapped;\n        })\n      );\n    }\n  };\n};\n\nconst pov = (_get = getter, _set = setter) => (\n  source = {},\n  mapping = {},\n  options = {}\n) => {\n  // mapping = mapping || {};\n  // source = source || {};\n  // options = options || {};\n  // var _get = options.get || getter;\n  // var _set = options.set || setter;\n\n  function clone() {\n    return pov(_get, _set)(source, mapping);\n  }\n\n  function inject(from) {\n    from = from || {};\n    Object.keys(from).forEach(key => {\n      key in mapping && _set(this, key, _get(from, key));\n    });\n    return result;\n  }\n\n  function eject() {\n    return Object.keys(mapping).reduce((ejectable, key) => {\n      _set(ejectable, key, _get(this, key));\n      return ejectable;\n    }, {});\n  }\n\n  var result = {\n    array: array(_get, _set),\n    clone,\n    inject,\n    eject,\n    get source() {\n      return Object.assign({}, source);\n    }\n  };\n\n  function addGetterSetter(name, select) {\n    if (select) {\n      Object.defineProperty(result, name, {\n        configurable: false,\n        enumerable: true,\n        get: function() {\n          return select.get ? select.get(source) : _get(source, select);\n        },\n        set: function(value) {\n          if (select.set) select.set(source, value);\n          else _set(source, select, value);\n        }\n      });\n    } else {\n      Object.defineProperty(result, name, {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      });\n    }\n  }\n\n  Object.keys(mapping).forEach(function(key) {\n    addGetterSetter(key, mapping[key]);\n  });\n\n  return result;\n};\n\nexport default pov(getter, setter);\nexport { pov, array };\n"],"file":"pov.js"}